#    obj/CodeGenerator/Python/Debug/A2DP.py
#    Created 27/07/2023 at 10:10:03 from:
#        Messages = messages/Debug/A2DP.yaml
#        Template = Template.py
#        Language = python
#
#                     AUTOGENERATED FILE, DO NOT EDIT
import struct
import ctypes
from collections import OrderedDict
from msgtools.lib.messaging import *
import msgtools.lib.messaging as msg

class Debug_A2DP_Get :
    ID = 33441
    SIZE = 0
    MSG_OFFSET = Messaging.hdrSize
    # Enumerations
    IDs = OrderedDict([("FunctionBlock", 8), ("Function", 42), ("Operator", 1)])
    ReverseIDs = OrderedDict([(8, "FunctionBlock"), (42, "Function"), (1, "Operator")])
    
    
    #@staticmethod
    #def Create():
    #    message_buffer = ctypes.create_string_buffer(Debug_A2DP_Get.MSG_OFFSET + Debug_A2DP_Get.SIZE)
    #
    #    Messaging.hdr.SetMessageID(message_buffer, Debug_A2DP_Get.ID)
    #    Messaging.hdr.SetDataLength(message_buffer, Debug_A2DP_Get.SIZE)
    #
    #    return message_buffer

    def __init__(self, messageBuffer=None):
        doInit = 0
        if messageBuffer == None:
            doInit = 1
            messageBuffer = ctypes.create_string_buffer(Debug_A2DP_Get.MSG_OFFSET + Debug_A2DP_Get.SIZE)
        else:
            try:
                messageBuffer.raw
            except AttributeError:
                newbuf = ctypes.create_string_buffer(len(messageBuffer))
                for i in range(0, len(messageBuffer)):
                    newbuf[i] = bytes(messageBuffer)[i]
                messageBuffer = newbuf
        # this is a trick to get us to store a copy of a pointer to a buffer, rather than making a copy of the buffer
        self.msg_buffer_wrapper = { "msg_buffer": messageBuffer }

        self.hdr = Messaging.hdr(messageBuffer)
        if doInit:
            self.hdr.SetMessageID(Debug_A2DP_Get.ID)
            self.hdr.SetDataLength(Debug_A2DP_Get.SIZE)
            self.initialize()

    def initialize(self):
            pass

    def rawBuffer(self):
        # this is a trick to get us to store a copy of a pointer to a buffer, rather than making a copy of the buffer
        return self.msg_buffer_wrapper["msg_buffer"]

    @staticmethod
    def MsgName():
        return "Debug.A2DP.Get"
    # Accessors

    # Reflection information
    fields = [ \
    ]

Messaging.Register("Debug.A2DP.Get", Debug_A2DP_Get.ID, Debug_A2DP_Get)
#    obj/CodeGenerator/Python/Debug/A2DP.py
#    Created 27/07/2023 at 10:10:03 from:
#        Messages = messages/Debug/A2DP.yaml
#        Template = Template.py
#        Language = python
#
#                     AUTOGENERATED FILE, DO NOT EDIT
import struct
import ctypes
from collections import OrderedDict
from msgtools.lib.messaging import *
import msgtools.lib.messaging as msg

class Debug_A2DP_Status :
    ID = 33443
    SIZE = 87
    MSG_OFFSET = Messaging.hdrSize
    # Enumerations
    IDs = OrderedDict([("FunctionBlock", 8), ("Function", 42), ("Operator", 3)])
    ReverseIDs = OrderedDict([(8, "FunctionBlock"), (42, "Function"), (3, "Operator")])
    
    
    #@staticmethod
    #def Create():
    #    message_buffer = ctypes.create_string_buffer(Debug_A2DP_Status.MSG_OFFSET + Debug_A2DP_Status.SIZE)
    #
    #    Messaging.hdr.SetMessageID(message_buffer, Debug_A2DP_Status.ID)
    #    Messaging.hdr.SetDataLength(message_buffer, Debug_A2DP_Status.SIZE)
    #
    #    return message_buffer

    def __init__(self, messageBuffer=None):
        doInit = 0
        if messageBuffer == None:
            doInit = 1
            messageBuffer = ctypes.create_string_buffer(Debug_A2DP_Status.MSG_OFFSET + Debug_A2DP_Status.SIZE)
        else:
            try:
                messageBuffer.raw
            except AttributeError:
                newbuf = ctypes.create_string_buffer(len(messageBuffer))
                for i in range(0, len(messageBuffer)):
                    newbuf[i] = bytes(messageBuffer)[i]
                messageBuffer = newbuf
        # this is a trick to get us to store a copy of a pointer to a buffer, rather than making a copy of the buffer
        self.msg_buffer_wrapper = { "msg_buffer": messageBuffer }

        self.hdr = Messaging.hdr(messageBuffer)
        if doInit:
            self.hdr.SetMessageID(Debug_A2DP_Status.ID)
            self.hdr.SetDataLength(Debug_A2DP_Status.SIZE)
            self.initialize()

    def initialize(self):
            pass

    def rawBuffer(self):
        # this is a trick to get us to store a copy of a pointer to a buffer, rather than making a copy of the buffer
        return self.msg_buffer_wrapper["msg_buffer"]

    @staticmethod
    def MsgName():
        return "Debug.A2DP.Status"
    # Accessors
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('0')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpConnected0(self):
        """Connected Boolean A2dp Index 0"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 0)[0]
        return value
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('1')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpConnected1(self):
        """Connected Boolean A2dp Index 1"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 1)[0]
        return value
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('2')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpMediaReconnect0(self):
        """Media Reconnect Boolean A2dp Index 0"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 2)[0]
        return value
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('3')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpMediaReconnect1(self):
        """Media Reconnect Boolean A2dp Index 1"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 3)[0]
        return value
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('4')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpMicMute0(self):
        """Mic Mute Boolean A2dp Index 0"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 4)[0]
        return value
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('5')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpMicMute1(self):
        """Mic Mute Boolean A2dp Index 1"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 5)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('6')
    @msg.size('2')
    @msg.count(1)
    def GetA2dpPeerLinkLossReconnect(self):
        """Peer Link Loss Reconnect"""
        value = struct.unpack_from('>H', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 6)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('8')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpPeerFeatures0(self):
        """Remote Features Index 0"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 8)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('9')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpPeerFeatures1(self):
        """Remote Features Index 1"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 9)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('10')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpPeerDevice0(self):
        """Peer Device Index 0 (E.g. Unknown, Nonpeer, Peer)"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 10)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('11')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpPeerDevice1(self):
        """Peer Device Index 1 (E.g. Unknown, Nonpeer, Peer)"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 11)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('12')
    @msg.size('2')
    @msg.count(1)
    def GetA2dpPeerVersion0(self):
        """Peer Version Index 0"""
        value = struct.unpack_from('>H', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 12)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('14')
    @msg.size('2')
    @msg.count(1)
    def GetA2dpPeerVersion1(self):
        """Peer Version Index 1"""
        value = struct.unpack_from('>H', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 14)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('16')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpPeerBufferLevel0(self):
        """Peer Buffer Level Index 0"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 16)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('17')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpPeerBufferLevel1(self):
        """Peer Buffer Level Index 1"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 17)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('18')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpLocalPeerStatus0(self):
        """Local Peer Status Index 0"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 18)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('19')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpLocalPeerStatus1(self):
        """Local Peer Status Index 1"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 19)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('20')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpRemotePeerStatus0(self):
        """Remote Peer Status Index 0"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 20)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('21')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpRemotePeerStatus1(self):
        """Remote Peer Status Index 1"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 21)[0]
        return value
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('22')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpPlaying0(self):
        """A2dp IsPlaying Boolean Index 0"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 22)[0]
        return value
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('23')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpPlaying1(self):
        """A2dp IsPlaying Boolean Index 1"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 23)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('24')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpLinkRole0(self):
        """A2dp Link Role Index 0"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 24)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('25')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpLinkRole1(self):
        """A2dp Link Role Index 1"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 25)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('26')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpSuspendState0(self):
        """A2dp Suspend State Index 0"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 26)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('27')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpSuspendState1(self):
        """A2dp Suspend State Index 1"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 27)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('28')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpAVSource0(self):
        """A2dp AV Source Index 0"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 28)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('29')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpAVSource1(self):
        """A2dp AV Source Index 1"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 29)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('30')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpDeviceId0(self):
        """A2dp Device Id Index 0"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 30)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('31')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpDeviceId1(self):
        """A2dp Device Id Index 1"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 31)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('32')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpStreamId0(self):
        """A2dp Stream Id Index 0"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 32)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('33')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpStreamId1(self):
        """A2dp Stream Id Index 1"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 33)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('34')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpSeid0(self):
        """A2dp Seid Index 0"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 34)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('35')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpSeid1(self):
        """A2dp Seid Index 1"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 35)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('36')
    @msg.size('2')
    @msg.count(1)
    def GetA2dpLatency0(self):
        """A2dp Latency Index 0"""
        value = struct.unpack_from('>H', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 36)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('38')
    @msg.size('2')
    @msg.count(1)
    def GetA2dpLatency1(self):
        """A2dp Latency Index 1"""
        value = struct.unpack_from('>H', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 38)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('40')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpListId0(self):
        """A2dp List Id Index 0"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 40)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('41')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpListId1(self):
        """A2dp List Id Index 1"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 41)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('42')
    @msg.size('1')
    @msg.count(6)
    def GetA2dpBdAddr0(self, idx):
        """A2dp Bluetooth Address Index 0"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 42+idx*1)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('48')
    @msg.size('1')
    @msg.count(6)
    def GetA2dpBdAddr1(self, idx):
        """A2dp Bluetooth Address Index 1"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 48+idx*1)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('54')
    @msg.size('2')
    @msg.count(1)
    def GetA2dpClockMismatchRate0(self):
        """A2dp Clock Mismatch Rate Index 0"""
        value = struct.unpack_from('>H', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 54)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('56')
    @msg.size('2')
    @msg.count(1)
    def GetA2dpClockMismatchRate1(self):
        """A2dp Clock Mismatch Rate Index 1"""
        value = struct.unpack_from('>H', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 56)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('58')
    @msg.size('2')
    @msg.count(1)
    def GetA2dpMainVolume0(self):
        """A2dp Main Volume Steps Index 0"""
        value = struct.unpack_from('>H', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 58)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('60')
    @msg.size('2')
    @msg.count(1)
    def GetA2dpMainVolume1(self):
        """A2dp Main Volume Steps Index 1"""
        value = struct.unpack_from('>H', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 60)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('62')
    @msg.size('2')
    @msg.count(1)
    def GetA2dpAuxVolume0(self):
        """A2dp Aux Volume Steps Index 0"""
        value = struct.unpack_from('>H', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 62)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('64')
    @msg.size('2')
    @msg.count(1)
    def GetA2dpAuxVolume1(self):
        """A2dp Aux Volume Steps Index 1"""
        value = struct.unpack_from('>H', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 64)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('66')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpAvrcpSupport0(self):
        """A2dp AVRCP Support Index 0"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 66)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('67')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpAvrcpSupport1(self):
        """A2dp AVRCP Support Index 1"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 67)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('4294967295')
    @msg.offset('68')
    @msg.size('4')
    @msg.count(1)
    def GetA2dpLocalPeerOptionalCodecs(self):
        """A2dp Local Peer Optional Codecs"""
        value = struct.unpack_from('>L', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 68)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('4294967295')
    @msg.offset('72')
    @msg.size('4')
    @msg.count(1)
    def GetA2dpRemotePeerOptionalCodecs(self):
        """A2dp Remote Peer Optional Codecs"""
        value = struct.unpack_from('>L', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 72)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('76')
    @msg.size('1')
    @msg.count(6)
    def GetA2dpReconnectedAgAddr(self, idx):
        """BD Address of the AG to be reconnected"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 76+idx*1)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('82')
    @msg.size('2')
    @msg.count(1)
    def GetA2dpUiConnectUpdateDelay(self):
        """Delay Messages that cause UI updates for connectionby this amount in ms"""
        value = struct.unpack_from('>H', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 82)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('84')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpRemoteAgConnection(self):
        """"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 84)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('15')
    @msg.offset('84')
    @msg.size('0')
    @msg.count(1)
    def GetPrimaryA2DPRemoteAgConnection(self):
        """Primary A2dp Remote AG Connection"""
        value = (self.GetA2dpRemoteAgConnection() >> 0) & 0xf
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('15')
    @msg.offset('84')
    @msg.size('0')
    @msg.count(1)
    def GetSecondaryA2DPRemoteAgConnection(self):
        """Secondary A2dp Remote AG Connection"""
        value = (self.GetA2dpRemoteAgConnection() >> 4) & 0xf
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('85')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpInitialized(self):
        """A2dp Initialized Flag"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 85)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('86')
    @msg.size('1')
    @msg.count(1)
    def GetA2dpQualDisableStreamResume(self):
        """Qualcomm Disable Stream Resume (For SNK Role PTS Qualification)"""
        value = struct.unpack_from('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 86)[0]
        return value
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('0')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpConnected0(self, value):
        """Connected Boolean A2dp Index 0"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 0, tmp)
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('1')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpConnected1(self, value):
        """Connected Boolean A2dp Index 1"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 1, tmp)
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('2')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpMediaReconnect0(self, value):
        """Media Reconnect Boolean A2dp Index 0"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 2, tmp)
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('3')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpMediaReconnect1(self, value):
        """Media Reconnect Boolean A2dp Index 1"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 3, tmp)
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('4')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpMicMute0(self, value):
        """Mic Mute Boolean A2dp Index 0"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 4, tmp)
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('5')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpMicMute1(self, value):
        """Mic Mute Boolean A2dp Index 1"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 5, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('6')
    @msg.size('2')
    @msg.count(1)
    def SetA2dpPeerLinkLossReconnect(self, value):
        """Peer Link Loss Reconnect"""
        tmp = min(max(value, 0), 65535)
        struct.pack_into('>H', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 6, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('8')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpPeerFeatures0(self, value):
        """Remote Features Index 0"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 8, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('9')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpPeerFeatures1(self, value):
        """Remote Features Index 1"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 9, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('10')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpPeerDevice0(self, value):
        """Peer Device Index 0 (E.g. Unknown, Nonpeer, Peer)"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 10, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('11')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpPeerDevice1(self, value):
        """Peer Device Index 1 (E.g. Unknown, Nonpeer, Peer)"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 11, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('12')
    @msg.size('2')
    @msg.count(1)
    def SetA2dpPeerVersion0(self, value):
        """Peer Version Index 0"""
        tmp = min(max(value, 0), 65535)
        struct.pack_into('>H', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 12, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('14')
    @msg.size('2')
    @msg.count(1)
    def SetA2dpPeerVersion1(self, value):
        """Peer Version Index 1"""
        tmp = min(max(value, 0), 65535)
        struct.pack_into('>H', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 14, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('16')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpPeerBufferLevel0(self, value):
        """Peer Buffer Level Index 0"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 16, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('17')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpPeerBufferLevel1(self, value):
        """Peer Buffer Level Index 1"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 17, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('18')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpLocalPeerStatus0(self, value):
        """Local Peer Status Index 0"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 18, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('19')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpLocalPeerStatus1(self, value):
        """Local Peer Status Index 1"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 19, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('20')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpRemotePeerStatus0(self, value):
        """Remote Peer Status Index 0"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 20, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('21')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpRemotePeerStatus1(self, value):
        """Remote Peer Status Index 1"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 21, tmp)
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('22')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpPlaying0(self, value):
        """A2dp IsPlaying Boolean Index 0"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 22, tmp)
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('23')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpPlaying1(self, value):
        """A2dp IsPlaying Boolean Index 1"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 23, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('24')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpLinkRole0(self, value):
        """A2dp Link Role Index 0"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 24, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('25')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpLinkRole1(self, value):
        """A2dp Link Role Index 1"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 25, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('26')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpSuspendState0(self, value):
        """A2dp Suspend State Index 0"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 26, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('27')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpSuspendState1(self, value):
        """A2dp Suspend State Index 1"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 27, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('28')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpAVSource0(self, value):
        """A2dp AV Source Index 0"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 28, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('29')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpAVSource1(self, value):
        """A2dp AV Source Index 1"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 29, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('30')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpDeviceId0(self, value):
        """A2dp Device Id Index 0"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 30, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('31')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpDeviceId1(self, value):
        """A2dp Device Id Index 1"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 31, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('32')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpStreamId0(self, value):
        """A2dp Stream Id Index 0"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 32, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('33')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpStreamId1(self, value):
        """A2dp Stream Id Index 1"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 33, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('34')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpSeid0(self, value):
        """A2dp Seid Index 0"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 34, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('35')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpSeid1(self, value):
        """A2dp Seid Index 1"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 35, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('36')
    @msg.size('2')
    @msg.count(1)
    def SetA2dpLatency0(self, value):
        """A2dp Latency Index 0"""
        tmp = min(max(value, 0), 65535)
        struct.pack_into('>H', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 36, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('38')
    @msg.size('2')
    @msg.count(1)
    def SetA2dpLatency1(self, value):
        """A2dp Latency Index 1"""
        tmp = min(max(value, 0), 65535)
        struct.pack_into('>H', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 38, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('40')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpListId0(self, value):
        """A2dp List Id Index 0"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 40, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('41')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpListId1(self, value):
        """A2dp List Id Index 1"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 41, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('42')
    @msg.size('1')
    @msg.count(6)
    def SetA2dpBdAddr0(self, value, idx):
        """A2dp Bluetooth Address Index 0"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 42+idx*1, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('48')
    @msg.size('1')
    @msg.count(6)
    def SetA2dpBdAddr1(self, value, idx):
        """A2dp Bluetooth Address Index 1"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 48+idx*1, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('54')
    @msg.size('2')
    @msg.count(1)
    def SetA2dpClockMismatchRate0(self, value):
        """A2dp Clock Mismatch Rate Index 0"""
        tmp = min(max(value, 0), 65535)
        struct.pack_into('>H', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 54, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('56')
    @msg.size('2')
    @msg.count(1)
    def SetA2dpClockMismatchRate1(self, value):
        """A2dp Clock Mismatch Rate Index 1"""
        tmp = min(max(value, 0), 65535)
        struct.pack_into('>H', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 56, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('58')
    @msg.size('2')
    @msg.count(1)
    def SetA2dpMainVolume0(self, value):
        """A2dp Main Volume Steps Index 0"""
        tmp = min(max(value, 0), 65535)
        struct.pack_into('>H', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 58, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('60')
    @msg.size('2')
    @msg.count(1)
    def SetA2dpMainVolume1(self, value):
        """A2dp Main Volume Steps Index 1"""
        tmp = min(max(value, 0), 65535)
        struct.pack_into('>H', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 60, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('62')
    @msg.size('2')
    @msg.count(1)
    def SetA2dpAuxVolume0(self, value):
        """A2dp Aux Volume Steps Index 0"""
        tmp = min(max(value, 0), 65535)
        struct.pack_into('>H', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 62, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('64')
    @msg.size('2')
    @msg.count(1)
    def SetA2dpAuxVolume1(self, value):
        """A2dp Aux Volume Steps Index 1"""
        tmp = min(max(value, 0), 65535)
        struct.pack_into('>H', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 64, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('66')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpAvrcpSupport0(self, value):
        """A2dp AVRCP Support Index 0"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 66, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('67')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpAvrcpSupport1(self, value):
        """A2dp AVRCP Support Index 1"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 67, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('4294967295')
    @msg.offset('68')
    @msg.size('4')
    @msg.count(1)
    def SetA2dpLocalPeerOptionalCodecs(self, value):
        """A2dp Local Peer Optional Codecs"""
        tmp = min(max(value, 0), 4294967295)
        struct.pack_into('>L', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 68, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('4294967295')
    @msg.offset('72')
    @msg.size('4')
    @msg.count(1)
    def SetA2dpRemotePeerOptionalCodecs(self, value):
        """A2dp Remote Peer Optional Codecs"""
        tmp = min(max(value, 0), 4294967295)
        struct.pack_into('>L', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 72, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('76')
    @msg.size('1')
    @msg.count(6)
    def SetA2dpReconnectedAgAddr(self, value, idx):
        """BD Address of the AG to be reconnected"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 76+idx*1, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('82')
    @msg.size('2')
    @msg.count(1)
    def SetA2dpUiConnectUpdateDelay(self, value):
        """Delay Messages that cause UI updates for connectionby this amount in ms"""
        tmp = min(max(value, 0), 65535)
        struct.pack_into('>H', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 82, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('84')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpRemoteAgConnection(self, value):
        """"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 84, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('15')
    @msg.offset('84')
    @msg.size('0')
    @msg.count(1)
    def SetPrimaryA2DPRemoteAgConnection(self, value):
        """Primary A2dp Remote AG Connection"""
        tmp = min(max(value, 0), 15)
        self.SetA2dpRemoteAgConnection((self.GetA2dpRemoteAgConnection() & ~(0xf << 0)) | ((tmp & 0xf) << 0))
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('15')
    @msg.offset('84')
    @msg.size('0')
    @msg.count(1)
    def SetSecondaryA2DPRemoteAgConnection(self, value):
        """Secondary A2dp Remote AG Connection"""
        tmp = min(max(value, 0), 15)
        self.SetA2dpRemoteAgConnection((self.GetA2dpRemoteAgConnection() & ~(0xf << 4)) | ((tmp & 0xf) << 4))
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('85')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpInitialized(self, value):
        """A2dp Initialized Flag"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 85, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('86')
    @msg.size('1')
    @msg.count(1)
    def SetA2dpQualDisableStreamResume(self, value):
        """Qualcomm Disable Stream Resume (For SNK Role PTS Qualification)"""
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Debug_A2DP_Status.MSG_OFFSET + 86, tmp)
    

    # Reflection information
    fields = [ \
        FieldInfo(name="A2dpConnected0",type="int",units="Boolean",minVal="0",maxVal="255",description="Connected Boolean A2dp Index 0",get=GetA2dpConnected0,set=SetA2dpConnected0,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpConnected1",type="int",units="Boolean",minVal="0",maxVal="255",description="Connected Boolean A2dp Index 1",get=GetA2dpConnected1,set=SetA2dpConnected1,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpMediaReconnect0",type="int",units="Boolean",minVal="0",maxVal="255",description="Media Reconnect Boolean A2dp Index 0",get=GetA2dpMediaReconnect0,set=SetA2dpMediaReconnect0,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpMediaReconnect1",type="int",units="Boolean",minVal="0",maxVal="255",description="Media Reconnect Boolean A2dp Index 1",get=GetA2dpMediaReconnect1,set=SetA2dpMediaReconnect1,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpMicMute0",type="int",units="Boolean",minVal="0",maxVal="255",description="Mic Mute Boolean A2dp Index 0",get=GetA2dpMicMute0,set=SetA2dpMicMute0,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpMicMute1",type="int",units="Boolean",minVal="0",maxVal="255",description="Mic Mute Boolean A2dp Index 1",get=GetA2dpMicMute1,set=SetA2dpMicMute1,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpPeerLinkLossReconnect",type="int",units="",minVal="0",maxVal="65535",description="Peer Link Loss Reconnect",get=GetA2dpPeerLinkLossReconnect,set=SetA2dpPeerLinkLossReconnect,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpPeerFeatures0",type="int",units="",minVal="0",maxVal="255",description="Remote Features Index 0",get=GetA2dpPeerFeatures0,set=SetA2dpPeerFeatures0,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpPeerFeatures1",type="int",units="",minVal="0",maxVal="255",description="Remote Features Index 1",get=GetA2dpPeerFeatures1,set=SetA2dpPeerFeatures1,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpPeerDevice0",type="int",units="",minVal="0",maxVal="255",description="Peer Device Index 0 (E.g. Unknown, Nonpeer, Peer)",get=GetA2dpPeerDevice0,set=SetA2dpPeerDevice0,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpPeerDevice1",type="int",units="",minVal="0",maxVal="255",description="Peer Device Index 1 (E.g. Unknown, Nonpeer, Peer)",get=GetA2dpPeerDevice1,set=SetA2dpPeerDevice1,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpPeerVersion0",type="int",units="",minVal="0",maxVal="65535",description="Peer Version Index 0",get=GetA2dpPeerVersion0,set=SetA2dpPeerVersion0,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpPeerVersion1",type="int",units="",minVal="0",maxVal="65535",description="Peer Version Index 1",get=GetA2dpPeerVersion1,set=SetA2dpPeerVersion1,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpPeerBufferLevel0",type="int",units="",minVal="0",maxVal="255",description="Peer Buffer Level Index 0",get=GetA2dpPeerBufferLevel0,set=SetA2dpPeerBufferLevel0,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpPeerBufferLevel1",type="int",units="",minVal="0",maxVal="255",description="Peer Buffer Level Index 1",get=GetA2dpPeerBufferLevel1,set=SetA2dpPeerBufferLevel1,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpLocalPeerStatus0",type="int",units="",minVal="0",maxVal="255",description="Local Peer Status Index 0",get=GetA2dpLocalPeerStatus0,set=SetA2dpLocalPeerStatus0,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpLocalPeerStatus1",type="int",units="",minVal="0",maxVal="255",description="Local Peer Status Index 1",get=GetA2dpLocalPeerStatus1,set=SetA2dpLocalPeerStatus1,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpRemotePeerStatus0",type="int",units="",minVal="0",maxVal="255",description="Remote Peer Status Index 0",get=GetA2dpRemotePeerStatus0,set=SetA2dpRemotePeerStatus0,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpRemotePeerStatus1",type="int",units="",minVal="0",maxVal="255",description="Remote Peer Status Index 1",get=GetA2dpRemotePeerStatus1,set=SetA2dpRemotePeerStatus1,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpPlaying0",type="int",units="Boolean",minVal="0",maxVal="255",description="A2dp IsPlaying Boolean Index 0",get=GetA2dpPlaying0,set=SetA2dpPlaying0,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpPlaying1",type="int",units="Boolean",minVal="0",maxVal="255",description="A2dp IsPlaying Boolean Index 1",get=GetA2dpPlaying1,set=SetA2dpPlaying1,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpLinkRole0",type="int",units="",minVal="0",maxVal="255",description="A2dp Link Role Index 0",get=GetA2dpLinkRole0,set=SetA2dpLinkRole0,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpLinkRole1",type="int",units="",minVal="0",maxVal="255",description="A2dp Link Role Index 1",get=GetA2dpLinkRole1,set=SetA2dpLinkRole1,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpSuspendState0",type="int",units="",minVal="0",maxVal="255",description="A2dp Suspend State Index 0",get=GetA2dpSuspendState0,set=SetA2dpSuspendState0,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpSuspendState1",type="int",units="",minVal="0",maxVal="255",description="A2dp Suspend State Index 1",get=GetA2dpSuspendState1,set=SetA2dpSuspendState1,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpAVSource0",type="int",units="",minVal="0",maxVal="255",description="A2dp AV Source Index 0",get=GetA2dpAVSource0,set=SetA2dpAVSource0,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpAVSource1",type="int",units="",minVal="0",maxVal="255",description="A2dp AV Source Index 1",get=GetA2dpAVSource1,set=SetA2dpAVSource1,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpDeviceId0",type="int",units="",minVal="0",maxVal="255",description="A2dp Device Id Index 0",get=GetA2dpDeviceId0,set=SetA2dpDeviceId0,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpDeviceId1",type="int",units="",minVal="0",maxVal="255",description="A2dp Device Id Index 1",get=GetA2dpDeviceId1,set=SetA2dpDeviceId1,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpStreamId0",type="int",units="",minVal="0",maxVal="255",description="A2dp Stream Id Index 0",get=GetA2dpStreamId0,set=SetA2dpStreamId0,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpStreamId1",type="int",units="",minVal="0",maxVal="255",description="A2dp Stream Id Index 1",get=GetA2dpStreamId1,set=SetA2dpStreamId1,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpSeid0",type="int",units="",minVal="0",maxVal="255",description="A2dp Seid Index 0",get=GetA2dpSeid0,set=SetA2dpSeid0,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpSeid1",type="int",units="",minVal="0",maxVal="255",description="A2dp Seid Index 1",get=GetA2dpSeid1,set=SetA2dpSeid1,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpLatency0",type="int",units="",minVal="0",maxVal="65535",description="A2dp Latency Index 0",get=GetA2dpLatency0,set=SetA2dpLatency0,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpLatency1",type="int",units="",minVal="0",maxVal="65535",description="A2dp Latency Index 1",get=GetA2dpLatency1,set=SetA2dpLatency1,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpListId0",type="int",units="",minVal="0",maxVal="255",description="A2dp List Id Index 0",get=GetA2dpListId0,set=SetA2dpListId0,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpListId1",type="int",units="",minVal="0",maxVal="255",description="A2dp List Id Index 1",get=GetA2dpListId1,set=SetA2dpListId1,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpBdAddr0",type="int",units="",minVal="0",maxVal="255",description="A2dp Bluetooth Address Index 0",get=GetA2dpBdAddr0,set=SetA2dpBdAddr0,count=6, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpBdAddr1",type="int",units="",minVal="0",maxVal="255",description="A2dp Bluetooth Address Index 1",get=GetA2dpBdAddr1,set=SetA2dpBdAddr1,count=6, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpClockMismatchRate0",type="int",units="",minVal="0",maxVal="65535",description="A2dp Clock Mismatch Rate Index 0",get=GetA2dpClockMismatchRate0,set=SetA2dpClockMismatchRate0,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpClockMismatchRate1",type="int",units="",minVal="0",maxVal="65535",description="A2dp Clock Mismatch Rate Index 1",get=GetA2dpClockMismatchRate1,set=SetA2dpClockMismatchRate1,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpMainVolume0",type="int",units="",minVal="0",maxVal="65535",description="A2dp Main Volume Steps Index 0",get=GetA2dpMainVolume0,set=SetA2dpMainVolume0,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpMainVolume1",type="int",units="",minVal="0",maxVal="65535",description="A2dp Main Volume Steps Index 1",get=GetA2dpMainVolume1,set=SetA2dpMainVolume1,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpAuxVolume0",type="int",units="",minVal="0",maxVal="65535",description="A2dp Aux Volume Steps Index 0",get=GetA2dpAuxVolume0,set=SetA2dpAuxVolume0,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpAuxVolume1",type="int",units="",minVal="0",maxVal="65535",description="A2dp Aux Volume Steps Index 1",get=GetA2dpAuxVolume1,set=SetA2dpAuxVolume1,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpAvrcpSupport0",type="int",units="",minVal="0",maxVal="255",description="A2dp AVRCP Support Index 0",get=GetA2dpAvrcpSupport0,set=SetA2dpAvrcpSupport0,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpAvrcpSupport1",type="int",units="",minVal="0",maxVal="255",description="A2dp AVRCP Support Index 1",get=GetA2dpAvrcpSupport1,set=SetA2dpAvrcpSupport1,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpLocalPeerOptionalCodecs",type="int",units="",minVal="0",maxVal="4294967295",description="A2dp Local Peer Optional Codecs",get=GetA2dpLocalPeerOptionalCodecs,set=SetA2dpLocalPeerOptionalCodecs,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpRemotePeerOptionalCodecs",type="int",units="",minVal="0",maxVal="4294967295",description="A2dp Remote Peer Optional Codecs",get=GetA2dpRemotePeerOptionalCodecs,set=SetA2dpRemotePeerOptionalCodecs,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpReconnectedAgAddr",type="int",units="",minVal="0",maxVal="255",description="BD Address of the AG to be reconnected",get=GetA2dpReconnectedAgAddr,set=SetA2dpReconnectedAgAddr,count=6, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpUiConnectUpdateDelay",type="int",units="",minVal="0",maxVal="65535",description="Delay Messages that cause UI updates for connectionby this amount in ms",get=GetA2dpUiConnectUpdateDelay,set=SetA2dpUiConnectUpdateDelay,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpRemoteAgConnection",type="int",units="",minVal="0",maxVal="255",description="",get=GetA2dpRemoteAgConnection,set=SetA2dpRemoteAgConnection,count=1, bitfieldInfo = [\
            BitFieldInfo(name="PrimaryA2DPRemoteAgConnection",type="int",units="",minVal="0",maxVal="15",description="Primary A2dp Remote AG Connection",get=GetPrimaryA2DPRemoteAgConnection,set=SetPrimaryA2DPRemoteAgConnection, enum = []),\
            BitFieldInfo(name="SecondaryA2DPRemoteAgConnection",type="int",units="",minVal="0",maxVal="15",description="Secondary A2dp Remote AG Connection",get=GetSecondaryA2DPRemoteAgConnection,set=SetSecondaryA2DPRemoteAgConnection, enum = [])], enum = []),\
        FieldInfo(name="A2dpInitialized",type="int",units="",minVal="0",maxVal="255",description="A2dp Initialized Flag",get=GetA2dpInitialized,set=SetA2dpInitialized,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="A2dpQualDisableStreamResume",type="int",units="",minVal="0",maxVal="255",description="Qualcomm Disable Stream Resume (For SNK Role PTS Qualification)",get=GetA2dpQualDisableStreamResume,set=SetA2dpQualDisableStreamResume,count=1, bitfieldInfo = [], enum = [])\
    ]

Messaging.Register("Debug.A2DP.Status", Debug_A2DP_Status.ID, Debug_A2DP_Status)
