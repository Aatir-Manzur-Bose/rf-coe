#    obj/CodeGenerator/Python/Experimental/CapTouchGesture.py
#    Created 27/07/2023 at 10:10:32 from:
#        Messages = messages/Experimental/CapTouchGesture.yaml
#        Template = Template.py
#        Language = python
#
#                     AUTOGENERATED FILE, DO NOT EDIT
import struct
import ctypes
from collections import OrderedDict
from msgtools.lib.messaging import *
import msgtools.lib.messaging as msg

class Experimental_CapTouchGesture_Status :
    ID = 78163
    SIZE = 2
    MSG_OFFSET = Messaging.hdrSize
    # Enumerations
    IDs = OrderedDict([("FunctionBlock", 19), ("Function", 21), ("Operator", 3)])
    ReverseIDs = OrderedDict([(19, "FunctionBlock"), (21, "Function"), (3, "Operator")])
    
    
    #@staticmethod
    #def Create():
    #    message_buffer = ctypes.create_string_buffer(Experimental_CapTouchGesture_Status.MSG_OFFSET + Experimental_CapTouchGesture_Status.SIZE)
    #
    #    Messaging.hdr.SetMessageID(message_buffer, Experimental_CapTouchGesture_Status.ID)
    #    Messaging.hdr.SetDataLength(message_buffer, Experimental_CapTouchGesture_Status.SIZE)
    #
    #    return message_buffer

    def __init__(self, messageBuffer=None):
        doInit = 0
        if messageBuffer == None:
            doInit = 1
            messageBuffer = ctypes.create_string_buffer(Experimental_CapTouchGesture_Status.MSG_OFFSET + Experimental_CapTouchGesture_Status.SIZE)
        else:
            try:
                messageBuffer.raw
            except AttributeError:
                newbuf = ctypes.create_string_buffer(len(messageBuffer))
                for i in range(0, len(messageBuffer)):
                    newbuf[i] = bytes(messageBuffer)[i]
                messageBuffer = newbuf
        # this is a trick to get us to store a copy of a pointer to a buffer, rather than making a copy of the buffer
        self.msg_buffer_wrapper = { "msg_buffer": messageBuffer }

        self.hdr = Messaging.hdr(messageBuffer)
        if doInit:
            self.hdr.SetMessageID(Experimental_CapTouchGesture_Status.ID)
            self.hdr.SetDataLength(Experimental_CapTouchGesture_Status.SIZE)
            self.initialize()

    def initialize(self):
            pass

    def rawBuffer(self):
        # this is a trick to get us to store a copy of a pointer to a buffer, rather than making a copy of the buffer
        return self.msg_buffer_wrapper["msg_buffer"]

    @staticmethod
    def MsgName():
        return "Experimental.CapTouchGesture.Status"
    # Accessors
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('0')
    @msg.size('2')
    @msg.count(1)
    def GetGesture(self):
        """Gesture"""
        value = struct.unpack_from('>H', self.rawBuffer(), Experimental_CapTouchGesture_Status.MSG_OFFSET + 0)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetTap(self):
        """"""
        value = (self.GetGesture() >> 0) & 0x1
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetTapHold(self):
        """"""
        value = (self.GetGesture() >> 1) & 0x1
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetSwipeBackward(self):
        """"""
        value = (self.GetGesture() >> 2) & 0x1
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetSwipeForward(self):
        """"""
        value = (self.GetGesture() >> 3) & 0x1
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetSwipeUp(self):
        """"""
        value = (self.GetGesture() >> 4) & 0x1
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetSwipeDown(self):
        """"""
        value = (self.GetGesture() >> 5) & 0x1
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetDoubleTap(self):
        """"""
        value = (self.GetGesture() >> 6) & 0x1
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetUnassigned1(self):
        """"""
        value = (self.GetGesture() >> 7) & 0x1
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetTwoTap(self):
        """"""
        value = (self.GetGesture() >> 8) & 0x1
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetUnassigned2(self):
        """"""
        value = (self.GetGesture() >> 9) & 0x1
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetUnassigned3(self):
        """"""
        value = (self.GetGesture() >> 10) & 0x1
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetUnassigned4(self):
        """"""
        value = (self.GetGesture() >> 11) & 0x1
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetUnassigned5(self):
        """"""
        value = (self.GetGesture() >> 12) & 0x1
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetUnassigned6(self):
        """"""
        value = (self.GetGesture() >> 13) & 0x1
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetTwoSwipeUp(self):
        """"""
        value = (self.GetGesture() >> 14) & 0x1
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetTwoSwipeDown(self):
        """"""
        value = (self.GetGesture() >> 15) & 0x1
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('65535')
    @msg.offset('0')
    @msg.size('2')
    @msg.count(1)
    def SetGesture(self, value):
        """Gesture"""
        tmp = min(max(value, 0), 65535)
        struct.pack_into('>H', self.rawBuffer(), Experimental_CapTouchGesture_Status.MSG_OFFSET + 0, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetTap(self, value):
        """"""
        tmp = min(max(value, 0), 1)
        self.SetGesture((self.GetGesture() & ~(0x1 << 0)) | ((tmp & 0x1) << 0))
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetTapHold(self, value):
        """"""
        tmp = min(max(value, 0), 1)
        self.SetGesture((self.GetGesture() & ~(0x1 << 1)) | ((tmp & 0x1) << 1))
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetSwipeBackward(self, value):
        """"""
        tmp = min(max(value, 0), 1)
        self.SetGesture((self.GetGesture() & ~(0x1 << 2)) | ((tmp & 0x1) << 2))
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetSwipeForward(self, value):
        """"""
        tmp = min(max(value, 0), 1)
        self.SetGesture((self.GetGesture() & ~(0x1 << 3)) | ((tmp & 0x1) << 3))
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetSwipeUp(self, value):
        """"""
        tmp = min(max(value, 0), 1)
        self.SetGesture((self.GetGesture() & ~(0x1 << 4)) | ((tmp & 0x1) << 4))
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetSwipeDown(self, value):
        """"""
        tmp = min(max(value, 0), 1)
        self.SetGesture((self.GetGesture() & ~(0x1 << 5)) | ((tmp & 0x1) << 5))
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetDoubleTap(self, value):
        """"""
        tmp = min(max(value, 0), 1)
        self.SetGesture((self.GetGesture() & ~(0x1 << 6)) | ((tmp & 0x1) << 6))
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetUnassigned1(self, value):
        """"""
        tmp = min(max(value, 0), 1)
        self.SetGesture((self.GetGesture() & ~(0x1 << 7)) | ((tmp & 0x1) << 7))
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetTwoTap(self, value):
        """"""
        tmp = min(max(value, 0), 1)
        self.SetGesture((self.GetGesture() & ~(0x1 << 8)) | ((tmp & 0x1) << 8))
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetUnassigned2(self, value):
        """"""
        tmp = min(max(value, 0), 1)
        self.SetGesture((self.GetGesture() & ~(0x1 << 9)) | ((tmp & 0x1) << 9))
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetUnassigned3(self, value):
        """"""
        tmp = min(max(value, 0), 1)
        self.SetGesture((self.GetGesture() & ~(0x1 << 10)) | ((tmp & 0x1) << 10))
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetUnassigned4(self, value):
        """"""
        tmp = min(max(value, 0), 1)
        self.SetGesture((self.GetGesture() & ~(0x1 << 11)) | ((tmp & 0x1) << 11))
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetUnassigned5(self, value):
        """"""
        tmp = min(max(value, 0), 1)
        self.SetGesture((self.GetGesture() & ~(0x1 << 12)) | ((tmp & 0x1) << 12))
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetUnassigned6(self, value):
        """"""
        tmp = min(max(value, 0), 1)
        self.SetGesture((self.GetGesture() & ~(0x1 << 13)) | ((tmp & 0x1) << 13))
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetTwoSwipeUp(self, value):
        """"""
        tmp = min(max(value, 0), 1)
        self.SetGesture((self.GetGesture() & ~(0x1 << 14)) | ((tmp & 0x1) << 14))
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetTwoSwipeDown(self, value):
        """"""
        tmp = min(max(value, 0), 1)
        self.SetGesture((self.GetGesture() & ~(0x1 << 15)) | ((tmp & 0x1) << 15))
    

    # Reflection information
    fields = [ \
        FieldInfo(name="Gesture",type="int",units="",minVal="0",maxVal="65535",description="Gesture",get=GetGesture,set=SetGesture,count=1, bitfieldInfo = [\
            BitFieldInfo(name="Tap",type="int",units="",minVal="0",maxVal="1",description="",get=GetTap,set=SetTap, enum = []),\
            BitFieldInfo(name="TapHold",type="int",units="",minVal="0",maxVal="1",description="",get=GetTapHold,set=SetTapHold, enum = []),\
            BitFieldInfo(name="SwipeBackward",type="int",units="",minVal="0",maxVal="1",description="",get=GetSwipeBackward,set=SetSwipeBackward, enum = []),\
            BitFieldInfo(name="SwipeForward",type="int",units="",minVal="0",maxVal="1",description="",get=GetSwipeForward,set=SetSwipeForward, enum = []),\
            BitFieldInfo(name="SwipeUp",type="int",units="",minVal="0",maxVal="1",description="",get=GetSwipeUp,set=SetSwipeUp, enum = []),\
            BitFieldInfo(name="SwipeDown",type="int",units="",minVal="0",maxVal="1",description="",get=GetSwipeDown,set=SetSwipeDown, enum = []),\
            BitFieldInfo(name="DoubleTap",type="int",units="",minVal="0",maxVal="1",description="",get=GetDoubleTap,set=SetDoubleTap, enum = []),\
            BitFieldInfo(name="Unassigned1",type="int",units="",minVal="0",maxVal="1",description="",get=GetUnassigned1,set=SetUnassigned1, enum = []),\
            BitFieldInfo(name="TwoTap",type="int",units="",minVal="0",maxVal="1",description="",get=GetTwoTap,set=SetTwoTap, enum = []),\
            BitFieldInfo(name="Unassigned2",type="int",units="",minVal="0",maxVal="1",description="",get=GetUnassigned2,set=SetUnassigned2, enum = []),\
            BitFieldInfo(name="Unassigned3",type="int",units="",minVal="0",maxVal="1",description="",get=GetUnassigned3,set=SetUnassigned3, enum = []),\
            BitFieldInfo(name="Unassigned4",type="int",units="",minVal="0",maxVal="1",description="",get=GetUnassigned4,set=SetUnassigned4, enum = []),\
            BitFieldInfo(name="Unassigned5",type="int",units="",minVal="0",maxVal="1",description="",get=GetUnassigned5,set=SetUnassigned5, enum = []),\
            BitFieldInfo(name="Unassigned6",type="int",units="",minVal="0",maxVal="1",description="",get=GetUnassigned6,set=SetUnassigned6, enum = []),\
            BitFieldInfo(name="TwoSwipeUp",type="int",units="",minVal="0",maxVal="1",description="",get=GetTwoSwipeUp,set=SetTwoSwipeUp, enum = []),\
            BitFieldInfo(name="TwoSwipeDown",type="int",units="",minVal="0",maxVal="1",description="",get=GetTwoSwipeDown,set=SetTwoSwipeDown, enum = [])], enum = [])\
    ]

Messaging.Register("Experimental.CapTouchGesture.Status", Experimental_CapTouchGesture_Status.ID, Experimental_CapTouchGesture_Status)
