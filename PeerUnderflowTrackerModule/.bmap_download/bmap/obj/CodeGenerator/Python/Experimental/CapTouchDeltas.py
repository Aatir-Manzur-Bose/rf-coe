#    obj/CodeGenerator/Python/Experimental/CapTouchDeltas.py
#    Created 27/07/2023 at 10:10:31 from:
#        Messages = messages/Experimental/CapTouchDeltas.yaml
#        Template = Template.py
#        Language = python
#
#                     AUTOGENERATED FILE, DO NOT EDIT
import struct
import ctypes
from collections import OrderedDict
from msgtools.lib.messaging import *
import msgtools.lib.messaging as msg

class Experimental_CapTouchDeltas_Set :
    ID = 78352
    SIZE = 1
    MSG_OFFSET = Messaging.hdrSize
    # Enumerations
    CollectDataControl = OrderedDict([("Disable", 0), ("Enable", 1)])
    ReverseCollectDataControl = OrderedDict([(0, "Disable"), (1, "Enable")])
    IDs = OrderedDict([("FunctionBlock", 19), ("Function", 33), ("Operator", 0)])
    ReverseIDs = OrderedDict([(19, "FunctionBlock"), (33, "Function"), (0, "Operator")])
    
    
    #@staticmethod
    #def Create():
    #    message_buffer = ctypes.create_string_buffer(Experimental_CapTouchDeltas_Set.MSG_OFFSET + Experimental_CapTouchDeltas_Set.SIZE)
    #
    #    Messaging.hdr.SetMessageID(message_buffer, Experimental_CapTouchDeltas_Set.ID)
    #    Messaging.hdr.SetDataLength(message_buffer, Experimental_CapTouchDeltas_Set.SIZE)
    #
    #    return message_buffer

    def __init__(self, messageBuffer=None):
        doInit = 0
        if messageBuffer == None:
            doInit = 1
            messageBuffer = ctypes.create_string_buffer(Experimental_CapTouchDeltas_Set.MSG_OFFSET + Experimental_CapTouchDeltas_Set.SIZE)
        else:
            try:
                messageBuffer.raw
            except AttributeError:
                newbuf = ctypes.create_string_buffer(len(messageBuffer))
                for i in range(0, len(messageBuffer)):
                    newbuf[i] = bytes(messageBuffer)[i]
                messageBuffer = newbuf
        # this is a trick to get us to store a copy of a pointer to a buffer, rather than making a copy of the buffer
        self.msg_buffer_wrapper = { "msg_buffer": messageBuffer }

        self.hdr = Messaging.hdr(messageBuffer)
        if doInit:
            self.hdr.SetMessageID(Experimental_CapTouchDeltas_Set.ID)
            self.hdr.SetDataLength(Experimental_CapTouchDeltas_Set.SIZE)
            self.initialize()

    def initialize(self):
            pass

    def rawBuffer(self):
        # this is a trick to get us to store a copy of a pointer to a buffer, rather than making a copy of the buffer
        return self.msg_buffer_wrapper["msg_buffer"]

    @staticmethod
    def MsgName():
        return "Experimental.CapTouchDeltas.Set"
    # Accessors
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('0')
    @msg.size('1')
    @msg.count(1)
    def GetEnableDC(self, enumAsInt=0):
        """Enable/Disable data collection"""
        value = struct.unpack_from('B', self.rawBuffer(), Experimental_CapTouchDeltas_Set.MSG_OFFSET + 0)[0]
        if not enumAsInt:
            value = Experimental_CapTouchDeltas_Set.ReverseCollectDataControl.get(value, value)
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('255')
    @msg.offset('0')
    @msg.size('1')
    @msg.count(1)
    def SetEnableDC(self, value):
        """Enable/Disable data collection"""
        defaultValue = 0
        try:
            value = int(float(value))
        except ValueError:
            pass
        if isinstance(value, int) or value.isdigit():
            defaultValue = int(value)
        value = Experimental_CapTouchDeltas_Set.CollectDataControl.get(value, defaultValue)
        tmp = min(max(value, 0), 255)
        struct.pack_into('B', self.rawBuffer(), Experimental_CapTouchDeltas_Set.MSG_OFFSET + 0, tmp)
    

    # Reflection information
    fields = [ \
        FieldInfo(name="EnableDC",type="enumeration",units="",minVal="0",maxVal="255",description="Enable/Disable data collection",get=GetEnableDC,set=SetEnableDC,count=1, bitfieldInfo = [], enum = [CollectDataControl, ReverseCollectDataControl])\
    ]

Messaging.Register("Experimental.CapTouchDeltas.Set", Experimental_CapTouchDeltas_Set.ID, Experimental_CapTouchDeltas_Set)
#    obj/CodeGenerator/Python/Experimental/CapTouchDeltas.py
#    Created 27/07/2023 at 10:10:31 from:
#        Messages = messages/Experimental/CapTouchDeltas.yaml
#        Template = Template.py
#        Language = python
#
#                     AUTOGENERATED FILE, DO NOT EDIT
import struct
import ctypes
from collections import OrderedDict
from msgtools.lib.messaging import *
import msgtools.lib.messaging as msg

class Experimental_CapTouchDeltas_Status :
    ID = 78355
    SIZE = 96
    MSG_OFFSET = Messaging.hdrSize
    # Enumerations
    IDs = OrderedDict([("FunctionBlock", 19), ("Function", 33), ("Operator", 3)])
    ReverseIDs = OrderedDict([(19, "FunctionBlock"), (33, "Function"), (3, "Operator")])
    
    
    #@staticmethod
    #def Create():
    #    message_buffer = ctypes.create_string_buffer(Experimental_CapTouchDeltas_Status.MSG_OFFSET + Experimental_CapTouchDeltas_Status.SIZE)
    #
    #    Messaging.hdr.SetMessageID(message_buffer, Experimental_CapTouchDeltas_Status.ID)
    #    Messaging.hdr.SetDataLength(message_buffer, Experimental_CapTouchDeltas_Status.SIZE)
    #
    #    return message_buffer

    def __init__(self, messageBuffer=None):
        doInit = 0
        if messageBuffer == None:
            doInit = 1
            messageBuffer = ctypes.create_string_buffer(Experimental_CapTouchDeltas_Status.MSG_OFFSET + Experimental_CapTouchDeltas_Status.SIZE)
        else:
            try:
                messageBuffer.raw
            except AttributeError:
                newbuf = ctypes.create_string_buffer(len(messageBuffer))
                for i in range(0, len(messageBuffer)):
                    newbuf[i] = bytes(messageBuffer)[i]
                messageBuffer = newbuf
        # this is a trick to get us to store a copy of a pointer to a buffer, rather than making a copy of the buffer
        self.msg_buffer_wrapper = { "msg_buffer": messageBuffer }

        self.hdr = Messaging.hdr(messageBuffer)
        if doInit:
            self.hdr.SetMessageID(Experimental_CapTouchDeltas_Status.ID)
            self.hdr.SetDataLength(Experimental_CapTouchDeltas_Status.SIZE)
            self.initialize()

    def initialize(self):
            pass

    def rawBuffer(self):
        # this is a trick to get us to store a copy of a pointer to a buffer, rather than making a copy of the buffer
        return self.msg_buffer_wrapper["msg_buffer"]

    @staticmethod
    def MsgName():
        return "Experimental.CapTouchDeltas.Status"
    # Accessors
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('0')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue03(self):
        """Delta value for row 0 column 3"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 0)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('2')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue05(self):
        """Delta value for row 0 column 5"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 2)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('4')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue12(self):
        """Delta value for row 1 column 2"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 4)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('6')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue13(self):
        """Delta value for row 1 column 3"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 6)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('8')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue15(self):
        """Delta value for row 1 column 5"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 8)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('10')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue16(self):
        """Delta value for row 1 column 6"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 10)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('12')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue21(self):
        """Delta value for row 2 column 1"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 12)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('14')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue22(self):
        """Delta value for row 2 column 2"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 14)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('16')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue23(self):
        """Delta value for row 2 column 3"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 16)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('18')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue25(self):
        """Delta value for row 2 column 5"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 18)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('20')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue26(self):
        """Delta value for row 2 column 6"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 20)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('22')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue27(self):
        """Delta value for row 2 column 7"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 22)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('24')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue30(self):
        """Delta value for row 3 column 0"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 24)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('26')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue31(self):
        """Delta value for row 3 column 1"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 26)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('28')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue32(self):
        """Delta value for row 3 column 2"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 28)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('30')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue33(self):
        """Delta value for row 3 column 3"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 30)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('32')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue35(self):
        """Delta value for row 3 column 5"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 32)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('34')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue36(self):
        """Delta value for row 3 column 6"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 34)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('36')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue37(self):
        """Delta value for row 3 column 7"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 36)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('38')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue38(self):
        """Delta value for row 3 column 8"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 38)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('40')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue40(self):
        """Delta value for row 4 column 0"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 40)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('42')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue41(self):
        """Delta value for row 4 column 1"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 42)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('44')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue42(self):
        """Delta value for row 4 column 2"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 44)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('46')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue43(self):
        """Delta value for row 4 column 3"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 46)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('48')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue45(self):
        """Delta value for row 4 column 5"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 48)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('50')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue46(self):
        """Delta value for row 4 column 6"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 50)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('52')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue47(self):
        """Delta value for row 4 column 7"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 52)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('54')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue48(self):
        """Delta value for row 4 column 8"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 54)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('56')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue50(self):
        """Delta value for row 5 column 0"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 56)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('58')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue51(self):
        """Delta value for row 5 column 1"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 58)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('60')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue52(self):
        """Delta value for row 5 column 2"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 60)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('62')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue53(self):
        """Delta value for row 5 column 3"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 62)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('64')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue55(self):
        """Delta value for row 5 column 5"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 64)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('66')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue56(self):
        """Delta value for row 5 column 6"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 66)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('68')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue57(self):
        """Delta value for row 5 column 7"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 68)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('70')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue58(self):
        """Delta value for row 5 column 8"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 70)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('72')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue61(self):
        """Delta value for row 6 column 1"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 72)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('74')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue62(self):
        """Delta value for row 6 column 2"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 74)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('76')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue63(self):
        """Delta value for row 6 column 3"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 76)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('78')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue65(self):
        """Delta value for row 6 column 5"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 78)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('80')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue66(self):
        """Delta value for row 6 column 6"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 80)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('82')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue67(self):
        """Delta value for row 6 column 7"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 82)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('84')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue72(self):
        """Delta value for row 7 column 2"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 84)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('86')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue73(self):
        """Delta value for row 7 column 3"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 86)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('88')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue75(self):
        """Delta value for row 7 column 5"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 88)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('90')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue76(self):
        """Delta value for row 7 column 6"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 90)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('92')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue83(self):
        """Delta value for row 8 column 3"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 92)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('94')
    @msg.size('2')
    @msg.count(1)
    def GetDeltaValue85(self):
        """Delta value for row 8 column 5"""
        value = struct.unpack_from('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 94)[0]
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('0')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue03(self, value):
        """Delta value for row 0 column 3"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 0, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('2')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue05(self, value):
        """Delta value for row 0 column 5"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 2, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('4')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue12(self, value):
        """Delta value for row 1 column 2"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 4, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('6')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue13(self, value):
        """Delta value for row 1 column 3"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 6, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('8')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue15(self, value):
        """Delta value for row 1 column 5"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 8, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('10')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue16(self, value):
        """Delta value for row 1 column 6"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 10, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('12')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue21(self, value):
        """Delta value for row 2 column 1"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 12, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('14')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue22(self, value):
        """Delta value for row 2 column 2"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 14, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('16')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue23(self, value):
        """Delta value for row 2 column 3"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 16, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('18')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue25(self, value):
        """Delta value for row 2 column 5"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 18, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('20')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue26(self, value):
        """Delta value for row 2 column 6"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 20, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('22')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue27(self, value):
        """Delta value for row 2 column 7"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 22, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('24')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue30(self, value):
        """Delta value for row 3 column 0"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 24, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('26')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue31(self, value):
        """Delta value for row 3 column 1"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 26, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('28')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue32(self, value):
        """Delta value for row 3 column 2"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 28, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('30')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue33(self, value):
        """Delta value for row 3 column 3"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 30, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('32')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue35(self, value):
        """Delta value for row 3 column 5"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 32, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('34')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue36(self, value):
        """Delta value for row 3 column 6"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 34, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('36')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue37(self, value):
        """Delta value for row 3 column 7"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 36, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('38')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue38(self, value):
        """Delta value for row 3 column 8"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 38, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('40')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue40(self, value):
        """Delta value for row 4 column 0"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 40, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('42')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue41(self, value):
        """Delta value for row 4 column 1"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 42, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('44')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue42(self, value):
        """Delta value for row 4 column 2"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 44, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('46')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue43(self, value):
        """Delta value for row 4 column 3"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 46, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('48')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue45(self, value):
        """Delta value for row 4 column 5"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 48, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('50')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue46(self, value):
        """Delta value for row 4 column 6"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 50, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('52')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue47(self, value):
        """Delta value for row 4 column 7"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 52, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('54')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue48(self, value):
        """Delta value for row 4 column 8"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 54, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('56')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue50(self, value):
        """Delta value for row 5 column 0"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 56, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('58')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue51(self, value):
        """Delta value for row 5 column 1"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 58, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('60')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue52(self, value):
        """Delta value for row 5 column 2"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 60, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('62')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue53(self, value):
        """Delta value for row 5 column 3"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 62, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('64')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue55(self, value):
        """Delta value for row 5 column 5"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 64, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('66')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue56(self, value):
        """Delta value for row 5 column 6"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 66, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('68')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue57(self, value):
        """Delta value for row 5 column 7"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 68, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('70')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue58(self, value):
        """Delta value for row 5 column 8"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 70, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('72')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue61(self, value):
        """Delta value for row 6 column 1"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 72, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('74')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue62(self, value):
        """Delta value for row 6 column 2"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 74, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('76')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue63(self, value):
        """Delta value for row 6 column 3"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 76, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('78')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue65(self, value):
        """Delta value for row 6 column 5"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 78, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('80')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue66(self, value):
        """Delta value for row 6 column 6"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 80, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('82')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue67(self, value):
        """Delta value for row 6 column 7"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 82, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('84')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue72(self, value):
        """Delta value for row 7 column 2"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 84, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('86')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue73(self, value):
        """Delta value for row 7 column 3"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 86, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('88')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue75(self, value):
        """Delta value for row 7 column 5"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 88, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('90')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue76(self, value):
        """Delta value for row 7 column 6"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 90, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('92')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue83(self, value):
        """Delta value for row 8 column 3"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 92, tmp)
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('-32768')
    @msg.maxVal('32767')
    @msg.offset('94')
    @msg.size('2')
    @msg.count(1)
    def SetDeltaValue85(self, value):
        """Delta value for row 8 column 5"""
        tmp = min(max(value, -32768), 32767)
        struct.pack_into('>h', self.rawBuffer(), Experimental_CapTouchDeltas_Status.MSG_OFFSET + 94, tmp)
    

    # Reflection information
    fields = [ \
        FieldInfo(name="DeltaValue03",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 0 column 3",get=GetDeltaValue03,set=SetDeltaValue03,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue05",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 0 column 5",get=GetDeltaValue05,set=SetDeltaValue05,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue12",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 1 column 2",get=GetDeltaValue12,set=SetDeltaValue12,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue13",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 1 column 3",get=GetDeltaValue13,set=SetDeltaValue13,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue15",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 1 column 5",get=GetDeltaValue15,set=SetDeltaValue15,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue16",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 1 column 6",get=GetDeltaValue16,set=SetDeltaValue16,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue21",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 2 column 1",get=GetDeltaValue21,set=SetDeltaValue21,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue22",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 2 column 2",get=GetDeltaValue22,set=SetDeltaValue22,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue23",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 2 column 3",get=GetDeltaValue23,set=SetDeltaValue23,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue25",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 2 column 5",get=GetDeltaValue25,set=SetDeltaValue25,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue26",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 2 column 6",get=GetDeltaValue26,set=SetDeltaValue26,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue27",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 2 column 7",get=GetDeltaValue27,set=SetDeltaValue27,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue30",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 3 column 0",get=GetDeltaValue30,set=SetDeltaValue30,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue31",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 3 column 1",get=GetDeltaValue31,set=SetDeltaValue31,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue32",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 3 column 2",get=GetDeltaValue32,set=SetDeltaValue32,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue33",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 3 column 3",get=GetDeltaValue33,set=SetDeltaValue33,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue35",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 3 column 5",get=GetDeltaValue35,set=SetDeltaValue35,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue36",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 3 column 6",get=GetDeltaValue36,set=SetDeltaValue36,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue37",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 3 column 7",get=GetDeltaValue37,set=SetDeltaValue37,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue38",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 3 column 8",get=GetDeltaValue38,set=SetDeltaValue38,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue40",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 4 column 0",get=GetDeltaValue40,set=SetDeltaValue40,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue41",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 4 column 1",get=GetDeltaValue41,set=SetDeltaValue41,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue42",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 4 column 2",get=GetDeltaValue42,set=SetDeltaValue42,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue43",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 4 column 3",get=GetDeltaValue43,set=SetDeltaValue43,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue45",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 4 column 5",get=GetDeltaValue45,set=SetDeltaValue45,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue46",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 4 column 6",get=GetDeltaValue46,set=SetDeltaValue46,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue47",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 4 column 7",get=GetDeltaValue47,set=SetDeltaValue47,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue48",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 4 column 8",get=GetDeltaValue48,set=SetDeltaValue48,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue50",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 5 column 0",get=GetDeltaValue50,set=SetDeltaValue50,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue51",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 5 column 1",get=GetDeltaValue51,set=SetDeltaValue51,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue52",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 5 column 2",get=GetDeltaValue52,set=SetDeltaValue52,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue53",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 5 column 3",get=GetDeltaValue53,set=SetDeltaValue53,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue55",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 5 column 5",get=GetDeltaValue55,set=SetDeltaValue55,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue56",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 5 column 6",get=GetDeltaValue56,set=SetDeltaValue56,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue57",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 5 column 7",get=GetDeltaValue57,set=SetDeltaValue57,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue58",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 5 column 8",get=GetDeltaValue58,set=SetDeltaValue58,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue61",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 6 column 1",get=GetDeltaValue61,set=SetDeltaValue61,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue62",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 6 column 2",get=GetDeltaValue62,set=SetDeltaValue62,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue63",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 6 column 3",get=GetDeltaValue63,set=SetDeltaValue63,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue65",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 6 column 5",get=GetDeltaValue65,set=SetDeltaValue65,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue66",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 6 column 6",get=GetDeltaValue66,set=SetDeltaValue66,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue67",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 6 column 7",get=GetDeltaValue67,set=SetDeltaValue67,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue72",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 7 column 2",get=GetDeltaValue72,set=SetDeltaValue72,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue73",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 7 column 3",get=GetDeltaValue73,set=SetDeltaValue73,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue75",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 7 column 5",get=GetDeltaValue75,set=SetDeltaValue75,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue76",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 7 column 6",get=GetDeltaValue76,set=SetDeltaValue76,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue83",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 8 column 3",get=GetDeltaValue83,set=SetDeltaValue83,count=1, bitfieldInfo = [], enum = []),\
        FieldInfo(name="DeltaValue85",type="int",units="",minVal="-32768",maxVal="32767",description="Delta value for row 8 column 5",get=GetDeltaValue85,set=SetDeltaValue85,count=1, bitfieldInfo = [], enum = [])\
    ]

Messaging.Register("Experimental.CapTouchDeltas.Status", Experimental_CapTouchDeltas_Status.ID, Experimental_CapTouchDeltas_Status)
