#    obj/CodeGenerator/Python/Status/BatteryCondition.py
#    Created 27/07/2023 at 10:11:16 from:
#        Messages = messages/Status/BatteryCondition.yaml
#        Template = Template.py
#        Language = python
#
#                     AUTOGENERATED FILE, DO NOT EDIT
import struct
import ctypes
from collections import OrderedDict
from msgtools.lib.messaging import *
import msgtools.lib.messaging as msg

class Status_BatteryCondition_Get :
    ID = 8433
    SIZE = 0
    MSG_OFFSET = Messaging.hdrSize
    # Enumerations
    IDs = OrderedDict([("FunctionBlock", 2), ("Function", 15), ("Operator", 1)])
    ReverseIDs = OrderedDict([(2, "FunctionBlock"), (15, "Function"), (1, "Operator")])
    
    
    #@staticmethod
    #def Create():
    #    message_buffer = ctypes.create_string_buffer(Status_BatteryCondition_Get.MSG_OFFSET + Status_BatteryCondition_Get.SIZE)
    #
    #    Messaging.hdr.SetMessageID(message_buffer, Status_BatteryCondition_Get.ID)
    #    Messaging.hdr.SetDataLength(message_buffer, Status_BatteryCondition_Get.SIZE)
    #
    #    return message_buffer

    def __init__(self, messageBuffer=None):
        doInit = 0
        if messageBuffer == None:
            doInit = 1
            messageBuffer = ctypes.create_string_buffer(Status_BatteryCondition_Get.MSG_OFFSET + Status_BatteryCondition_Get.SIZE)
        else:
            try:
                messageBuffer.raw
            except AttributeError:
                newbuf = ctypes.create_string_buffer(len(messageBuffer))
                for i in range(0, len(messageBuffer)):
                    newbuf[i] = bytes(messageBuffer)[i]
                messageBuffer = newbuf
        # this is a trick to get us to store a copy of a pointer to a buffer, rather than making a copy of the buffer
        self.msg_buffer_wrapper = { "msg_buffer": messageBuffer }

        self.hdr = Messaging.hdr(messageBuffer)
        if doInit:
            self.hdr.SetMessageID(Status_BatteryCondition_Get.ID)
            self.hdr.SetDataLength(Status_BatteryCondition_Get.SIZE)
            self.initialize()

    def initialize(self):
            pass

    def rawBuffer(self):
        # this is a trick to get us to store a copy of a pointer to a buffer, rather than making a copy of the buffer
        return self.msg_buffer_wrapper["msg_buffer"]

    @staticmethod
    def MsgName():
        return "Status.BatteryCondition.Get"
    # Accessors

    # Reflection information
    fields = [ \
    ]

Messaging.Register("Status.BatteryCondition.Get", Status_BatteryCondition_Get.ID, Status_BatteryCondition_Get)
#    obj/CodeGenerator/Python/Status/BatteryCondition.py
#    Created 27/07/2023 at 10:11:16 from:
#        Messages = messages/Status/BatteryCondition.yaml
#        Template = Template.py
#        Language = python
#
#                     AUTOGENERATED FILE, DO NOT EDIT
import struct
import ctypes
from collections import OrderedDict
from msgtools.lib.messaging import *
import msgtools.lib.messaging as msg

class Status_BatteryCondition_Status :
    ID = 8435
    SIZE = 4
    MSG_OFFSET = Messaging.hdrSize
    # Enumerations
    IDs = OrderedDict([("FunctionBlock", 2), ("Function", 15), ("Operator", 3)])
    ReverseIDs = OrderedDict([(2, "FunctionBlock"), (15, "Function"), (3, "Operator")])
    
    
    #@staticmethod
    #def Create():
    #    message_buffer = ctypes.create_string_buffer(Status_BatteryCondition_Status.MSG_OFFSET + Status_BatteryCondition_Status.SIZE)
    #
    #    Messaging.hdr.SetMessageID(message_buffer, Status_BatteryCondition_Status.ID)
    #    Messaging.hdr.SetDataLength(message_buffer, Status_BatteryCondition_Status.SIZE)
    #
    #    return message_buffer

    def __init__(self, messageBuffer=None):
        doInit = 0
        if messageBuffer == None:
            doInit = 1
            messageBuffer = ctypes.create_string_buffer(Status_BatteryCondition_Status.MSG_OFFSET + Status_BatteryCondition_Status.SIZE)
        else:
            try:
                messageBuffer.raw
            except AttributeError:
                newbuf = ctypes.create_string_buffer(len(messageBuffer))
                for i in range(0, len(messageBuffer)):
                    newbuf[i] = bytes(messageBuffer)[i]
                messageBuffer = newbuf
        # this is a trick to get us to store a copy of a pointer to a buffer, rather than making a copy of the buffer
        self.msg_buffer_wrapper = { "msg_buffer": messageBuffer }

        self.hdr = Messaging.hdr(messageBuffer)
        if doInit:
            self.hdr.SetMessageID(Status_BatteryCondition_Status.ID)
            self.hdr.SetDataLength(Status_BatteryCondition_Status.SIZE)
            self.initialize()

    def initialize(self):
            pass

    def rawBuffer(self):
        # this is a trick to get us to store a copy of a pointer to a buffer, rather than making a copy of the buffer
        return self.msg_buffer_wrapper["msg_buffer"]

    @staticmethod
    def MsgName():
        return "Status.BatteryCondition.Status"
    # Accessors
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('4294967295')
    @msg.offset('0')
    @msg.size('4')
    @msg.count(1)
    def GetConditionBits(self):
        """Value of the various condition bits"""
        value = struct.unpack_from('>L', self.rawBuffer(), Status_BatteryCondition_Status.MSG_OFFSET + 0)[0]
        return value
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetDoNotDischarge(self):
        """Battery should not be dischared"""
        value = (self.GetConditionBits() >> 0) & 0x1
        return value
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetDoNotCharge(self):
        """Battery should not be charged"""
        value = (self.GetConditionBits() >> 1) & 0x1
        return value
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('16383')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetPlaceholder1(self):
        """Empty/place holder 1"""
        value = (self.GetConditionBits() >> 2) & 0x3fff
        return value
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetCurrentInitializing(self):
        """Battery system is initializing"""
        value = (self.GetConditionBits() >> 16) & 0x1
        return value
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetCurrentRecovering(self):
        """Battery system is recovering"""
        value = (self.GetConditionBits() >> 17) & 0x1
        return value
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetCurrentSupportMode(self):
        """Battery system is in support mode"""
        value = (self.GetConditionBits() >> 18) & 0x1
        return value
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetCurrentSupportModeRecoverable(self):
        """Battery system is in support mode and recoverable"""
        value = (self.GetConditionBits() >> 19) & 0x1
        return value
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetCurrentSupportModeUnrecoverable(self):
        """Battery system is in support mode and unrecoverable"""
        value = (self.GetConditionBits() >> 20) & 0x1
        return value
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetFullyOperational(self):
        """Battery system is operating normally"""
        value = (self.GetConditionBits() >> 21) & 0x1
        return value
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetPreviousInitializing(self):
        """Battery system was previously initializing"""
        value = (self.GetConditionBits() >> 22) & 0x1
        return value
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetPreviousRecovering(self):
        """Battery system was previously recovering"""
        value = (self.GetConditionBits() >> 23) & 0x1
        return value
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetPreviousSupportMode(self):
        """Battery system was previously in support mode"""
        value = (self.GetConditionBits() >> 24) & 0x1
        return value
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetPreviousFullyOperational(self):
        """Battery system was previously fully operational"""
        value = (self.GetConditionBits() >> 25) & 0x1
        return value
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('63')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def GetPlaceholder2(self):
        """Empty/place holder 2"""
        value = (self.GetConditionBits() >> 26) & 0x3f
        return value
    
    @msg.units('')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('4294967295')
    @msg.offset('0')
    @msg.size('4')
    @msg.count(1)
    def SetConditionBits(self, value):
        """Value of the various condition bits"""
        tmp = min(max(value, 0), 4294967295)
        struct.pack_into('>L', self.rawBuffer(), Status_BatteryCondition_Status.MSG_OFFSET + 0, tmp)
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetDoNotDischarge(self, value):
        """Battery should not be dischared"""
        tmp = min(max(value, 0), 1)
        self.SetConditionBits((self.GetConditionBits() & ~(0x1 << 0)) | ((tmp & 0x1) << 0))
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetDoNotCharge(self, value):
        """Battery should not be charged"""
        tmp = min(max(value, 0), 1)
        self.SetConditionBits((self.GetConditionBits() & ~(0x1 << 1)) | ((tmp & 0x1) << 1))
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('16383')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetPlaceholder1(self, value):
        """Empty/place holder 1"""
        tmp = min(max(value, 0), 16383)
        self.SetConditionBits((self.GetConditionBits() & ~(0x3fff << 2)) | ((tmp & 0x3fff) << 2))
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetCurrentInitializing(self, value):
        """Battery system is initializing"""
        tmp = min(max(value, 0), 1)
        self.SetConditionBits((self.GetConditionBits() & ~(0x1 << 16)) | ((tmp & 0x1) << 16))
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetCurrentRecovering(self, value):
        """Battery system is recovering"""
        tmp = min(max(value, 0), 1)
        self.SetConditionBits((self.GetConditionBits() & ~(0x1 << 17)) | ((tmp & 0x1) << 17))
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetCurrentSupportMode(self, value):
        """Battery system is in support mode"""
        tmp = min(max(value, 0), 1)
        self.SetConditionBits((self.GetConditionBits() & ~(0x1 << 18)) | ((tmp & 0x1) << 18))
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetCurrentSupportModeRecoverable(self, value):
        """Battery system is in support mode and recoverable"""
        tmp = min(max(value, 0), 1)
        self.SetConditionBits((self.GetConditionBits() & ~(0x1 << 19)) | ((tmp & 0x1) << 19))
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetCurrentSupportModeUnrecoverable(self, value):
        """Battery system is in support mode and unrecoverable"""
        tmp = min(max(value, 0), 1)
        self.SetConditionBits((self.GetConditionBits() & ~(0x1 << 20)) | ((tmp & 0x1) << 20))
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetFullyOperational(self, value):
        """Battery system is operating normally"""
        tmp = min(max(value, 0), 1)
        self.SetConditionBits((self.GetConditionBits() & ~(0x1 << 21)) | ((tmp & 0x1) << 21))
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetPreviousInitializing(self, value):
        """Battery system was previously initializing"""
        tmp = min(max(value, 0), 1)
        self.SetConditionBits((self.GetConditionBits() & ~(0x1 << 22)) | ((tmp & 0x1) << 22))
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetPreviousRecovering(self, value):
        """Battery system was previously recovering"""
        tmp = min(max(value, 0), 1)
        self.SetConditionBits((self.GetConditionBits() & ~(0x1 << 23)) | ((tmp & 0x1) << 23))
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetPreviousSupportMode(self, value):
        """Battery system was previously in support mode"""
        tmp = min(max(value, 0), 1)
        self.SetConditionBits((self.GetConditionBits() & ~(0x1 << 24)) | ((tmp & 0x1) << 24))
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('1')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetPreviousFullyOperational(self, value):
        """Battery system was previously fully operational"""
        tmp = min(max(value, 0), 1)
        self.SetConditionBits((self.GetConditionBits() & ~(0x1 << 25)) | ((tmp & 0x1) << 25))
    
    @msg.units('Boolean')
    @msg.default('')
    @msg.minVal('0')
    @msg.maxVal('63')
    @msg.offset('0')
    @msg.size('0')
    @msg.count(1)
    def SetPlaceholder2(self, value):
        """Empty/place holder 2"""
        tmp = min(max(value, 0), 63)
        self.SetConditionBits((self.GetConditionBits() & ~(0x3f << 26)) | ((tmp & 0x3f) << 26))
    

    # Reflection information
    fields = [ \
        FieldInfo(name="ConditionBits",type="int",units="",minVal="0",maxVal="4294967295",description="Value of the various condition bits",get=GetConditionBits,set=SetConditionBits,count=1, bitfieldInfo = [\
            BitFieldInfo(name="DoNotDischarge",type="int",units="Boolean",minVal="0",maxVal="1",description="Battery should not be dischared",get=GetDoNotDischarge,set=SetDoNotDischarge, enum = []),\
            BitFieldInfo(name="DoNotCharge",type="int",units="Boolean",minVal="0",maxVal="1",description="Battery should not be charged",get=GetDoNotCharge,set=SetDoNotCharge, enum = []),\
            BitFieldInfo(name="Placeholder1",type="int",units="Boolean",minVal="0",maxVal="16383",description="Empty/place holder 1",get=GetPlaceholder1,set=SetPlaceholder1, enum = []),\
            BitFieldInfo(name="CurrentInitializing",type="int",units="Boolean",minVal="0",maxVal="1",description="Battery system is initializing",get=GetCurrentInitializing,set=SetCurrentInitializing, enum = []),\
            BitFieldInfo(name="CurrentRecovering",type="int",units="Boolean",minVal="0",maxVal="1",description="Battery system is recovering",get=GetCurrentRecovering,set=SetCurrentRecovering, enum = []),\
            BitFieldInfo(name="CurrentSupportMode",type="int",units="Boolean",minVal="0",maxVal="1",description="Battery system is in support mode",get=GetCurrentSupportMode,set=SetCurrentSupportMode, enum = []),\
            BitFieldInfo(name="CurrentSupportModeRecoverable",type="int",units="Boolean",minVal="0",maxVal="1",description="Battery system is in support mode and recoverable",get=GetCurrentSupportModeRecoverable,set=SetCurrentSupportModeRecoverable, enum = []),\
            BitFieldInfo(name="CurrentSupportModeUnrecoverable",type="int",units="Boolean",minVal="0",maxVal="1",description="Battery system is in support mode and unrecoverable",get=GetCurrentSupportModeUnrecoverable,set=SetCurrentSupportModeUnrecoverable, enum = []),\
            BitFieldInfo(name="FullyOperational",type="int",units="Boolean",minVal="0",maxVal="1",description="Battery system is operating normally",get=GetFullyOperational,set=SetFullyOperational, enum = []),\
            BitFieldInfo(name="PreviousInitializing",type="int",units="Boolean",minVal="0",maxVal="1",description="Battery system was previously initializing",get=GetPreviousInitializing,set=SetPreviousInitializing, enum = []),\
            BitFieldInfo(name="PreviousRecovering",type="int",units="Boolean",minVal="0",maxVal="1",description="Battery system was previously recovering",get=GetPreviousRecovering,set=SetPreviousRecovering, enum = []),\
            BitFieldInfo(name="PreviousSupportMode",type="int",units="Boolean",minVal="0",maxVal="1",description="Battery system was previously in support mode",get=GetPreviousSupportMode,set=SetPreviousSupportMode, enum = []),\
            BitFieldInfo(name="PreviousFullyOperational",type="int",units="Boolean",minVal="0",maxVal="1",description="Battery system was previously fully operational",get=GetPreviousFullyOperational,set=SetPreviousFullyOperational, enum = []),\
            BitFieldInfo(name="Placeholder2",type="int",units="Boolean",minVal="0",maxVal="63",description="Empty/place holder 2",get=GetPlaceholder2,set=SetPlaceholder2, enum = [])], enum = [])\
    ]

Messaging.Register("Status.BatteryCondition.Status", Status_BatteryCondition_Status.ID, Status_BatteryCondition_Status)
